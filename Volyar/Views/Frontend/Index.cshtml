@model string

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Conversion Status";
}

@section head {
    <script src="~/external/static/lib/moment.js"></script>
    <script src="~/external/static/js/api.js"></script>
    <script src="~/external/static/js/timer.js"></script>
    <script defer src="~/external/static/js/vues.js"></script>
}

<style>
    *,
    *:before,
    *:after {
        box-sizing: border-box;
    }

    h1,
    p {
        margin: 0 0 1em 0;
    }

    body {
        background-color: #fafafa;
        padding: 0.25rem;
    }

    .wrapper {
        display: grid;
        grid-gap: 1rem;
        flex-wrap: wrap;
        margin-bottom: 1rem;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        grid-auto-rows: minmax(50px, auto);
    }

    .tab-wrapper {
        margin: 1rem;
    }

    .button-wrapper {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        text-align: center;
    }

    .control-button {
        margin: 0.2rem;
        margin-top: 0.75rem;
        min-width: 10rem;
    }

    .panel {
        margin: 0.1rem;
        word-break: break-all;
    }


    .checkbox-margin {
        margin-top: 8px;
    }

    .deletion-wrapper {
        display: grid;
        grid-gap: 1rem;
        flex-wrap: wrap;
        margin-bottom: 1rem;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        grid-auto-rows: minmax(50px, auto);
        word-break: break-all;
    }

    .deletion-item {
        display: flex;
        flex-direction: row;
        margin: 0.5rem 0 0 0.5rem;
    }

    .deletion-details-checked {
        border-color: #d8b0b0 !important;
    }

    .deletion-details {
        display: flex;
        flex-direction: column;
        padding: 0.5rem;
        margin: 0;
    }


        .deletion-details ul li {
            display: flex;
            flex-direction: row;
        }

            .deletion-details ul li p {
                text-align: right;
            }

            .deletion-details ul li h5 {
                width: 100%;
                text-align: center;
                padding-left: 1rem;
            }

            .deletion-details ul li p {
                color: #6c757d;
                min-width: 4rem;
                margin: 0 0.5rem 0 0;
            }

    .btn-cancel {
        float: right;
        margin: -2px;
        padding: 1px 6px 1px 6px;
        font-weight: bold;
    }

    .text-mute-warn {
        color: #6c757d;
    }

        .text-mute-warn:hover {
            color: white;
            background-color: #dc3545;
        }

    .card-body {
        padding: 0.4rem;
    }

    .queue-item-body {
        margin-left: 0.25rem;
        display: flex;
        justify-content: space-between;
    }

    .hidden-details {
        color: transparent;
        line-height: 0;
    }

    .nav-link {
        color: #6800ff;
    }

        .nav-link:hover {
            color: #5e00e6;
            background-color: rgba(152, 81, 255, 0.18)
        }

    .router-link-active {
        color: #fff;
        background-color: #6800ff;
    }

        .router-link-active:hover {
            color: #fff;
            background-color: #6800ff;
            cursor: default;
        }

    .VuePagination {
        text-align: center;
        display: block;
    }

    .vue-title {
        text-align: center;
        margin-bottom: 10px;
    }

    .vue-pagination-ad {
        text-align: center;
    }

    .VuePagination__pagination {
        display: inline-flex;
    }

    .VueTables__search {
        text-align: left;
        display: inline-flex;
        padding: 3px;
    }

    .VueTables__limit {
        display: inline-flex;
        padding: 3px;
    }
</style>

<div id="app">
    <ul class="nav nav-pills tab-wrapper button-wrapper">
        <li class="nav-item p-1"><router-link class="nav-link" to="/conversionStatus">Conversion Status</router-link></li>
        <li class="nav-item p-1"><router-link class="nav-link" to="/mediaManager">Media Manager</router-link></li>
        <li class="nav-item p-1"><router-link class="nav-link" to="/pendingDeletions">Pending Deletions</router-link></li>
    </ul>
    <hr />
    <router-view></router-view>
</div>

<script type="text/x-template" id="queue-template">
    <div class="wrapper">
        <div class="panel" v-for="item in items">
            <div class="card">
                <div class="card-body queue-item-body">
                    <div class="w-100">
                        <b v-if="item.Series">{{item.Series}}</b>
                        <details v-bind:title="item.SourcePath">
                            <summary class="card-title">
                                {{title(item)}}
                                <dl style="margin-left:8%;" v-if="item.ErrorText !== null">
                                    <dt class="text-danger">
                                        Error
                                    </dt>
                                    <dd>
                                        {{item.ErrorText}}
                                    </dd>
                                </dl>
                            </summary>
                            <dl style="margin-left:8%;">
                                <dt class="card-text">
                                    Added
                                </dt>
                                <dd v-bind:title="item.CreateTime">
                                    {{timeago(item.CreateTime)}}
                                </dd>

                                <dt>
                                    Qualities
                                </dt>
                                <dd>
                                    <quality-component v-bind:quality="item.Quality"></quality-component>
                                </dd>
                                <dt v-if="tune(item.Tune)">
                                    Tune
                                </dt>
                                <dd>
                                    {{tune(item.Tune)}}
                                </dd>
                            </dl>
                        </details>
                    </div>
                    <div class="" v-bind:title="'Cancel ' + item.SourcePath" v-if="item.Complete !== true">
                        <button class="btn text-mute-warn btn-sm btn-cancel" v-on:click="cancel(item.SourcePath)">X</button>
                    </div>
                </div>
                <div class="card-footer p-0" v-if="item.Complete !== true">
                    <progress-component v-bind:progress="item.Progress"></progress-component>
                </div>
            </div>
        </div>
    </div>
</script>

<script type="text/x-template" id="quality-template">
    <div>
        <div v-for="q in quality">
            {{q.Width}}x{{q.Height}}@@{{ q.Bitrate}}k - {{q.Preset}}
        </div>
    </div>
</script>

<script type="text/x-template" id="progress-template">
    <div>
        <div v-for="p in progress">
            {{shortenDescription(p.Description, 48)}}
            <br />
            <div class="progress" style="height: 1px;">
                <div class="progress-bar" v-bind:style="{ width: progressInt(p.Progress) + '%' }" style="width: 25%" role="progressbar" v-bind:aria-valuenow="progressInt(p.Progress)" aria-valuemin="0" aria-valuemax="100">
                </div>
            </div>
        </div>
    </div>
</script>

<script type="text/x-template" id="conversion-status-template">
    <div>
        <div class="card-body button-wrapper">
            <button class="btn btn-primary control-button" onclick="postFullscan();">Trigger Conversion</button>
            <button class="btn btn-warning control-button" onclick="pauseQueue();">Pause Queue</button>
            <button class="btn btn-success control-button" onclick="resumeQueue();">Resume Queue</button>
            <button class="btn btn-danger control-button" onclick="cancelAll();">Cancel All</button>
        </div>
        <details open>
            <summary class="hidden-details">
                <h5 class="alert alert-primary text-center">Processing {{queueSize(progress)}}</h5>
            </summary>
            <progress-queue-component v-bind:items="progress"></progress-queue-component>
        </details>
        <details open>
            <summary class="hidden-details">
                <h5 class="alert alert-dark text-center">Waiting {{queueSize(waiting)}}</h5>
            </summary>
            <wait-queue-component v-bind:items="waiting"></wait-queue-component>
        </details>
        <details open>
            <summary class="hidden-details">
                <h5 class="alert alert-success text-center">Complete {{queueSize(complete)}}</h5>
            </summary>
            <complete-queue-component v-bind:items="complete"></complete-queue-component>
        </details>
    </div>
</script>

<script type="text/x-template" id="pending-deletions-template">
    <div>
        <div class="card-body button-wrapper">
            <button class="btn btn-secondary control-button" v-on:click="revertDelete">Cancel Deletion</button>
            <button class="btn btn-danger control-button" v-on:click="confirmDelete">Delete</button>
        </div>
        <div class="button-wrapper p-2">
            <h5 style="margin-left:1rem;">
                <input class="form-check-input checkbox-margin" type="checkbox" v-model="masterCheck" :indeterminate.prop="indeterminate" v-on:change="masterCheckChanged">
                <span class="form-check-label">All</span>
            </h5>

        </div>
        <div class="deletion-wrapper">
            <div v-for="item in pendingDelete">
                <deletion-item-component v-bind:item="item" v-on:checked="invalidateMasterCheck"></deletion-item-component>
            </div>
        </div>
    </div>
</script>

<script type="text/x-template" id="deletion-item-template">
    <div class="card">
        <div class="card-body deletion-details">
            <ul class="deletion-details">
                <li>
                    <h5>
                        <input v-model="checked" v-on:change="checkChanged" class="form-check-input checkbox-margin" type="checkbox">
                        <span>{{item.Name}}</span>
                    </h5>
                </li>
                <li><p>ID:</p> {{item.MediaId}}</li>
                <li v-if="item.Version != -1"><p>Version:</p> {{item.Version}}</li>
                <li><p>Library:</p> {{item.LibraryName}}</li>
                <li><p>Series:</p> {{item.SeriesName}}</li>
                <li v-if="item.SeasonNumber && item.EpisodeNumber"><p>Episode:</p> {{item.SeasonNumber}}x{{item.EpisodeNumber}}</li>
                <li v-if="item.SeasonNumber && !item.EpisodeNumber"><p>Season:</p> {{item.SeasonNumber}}</li>
                <li v-if="!item.SeasonNumber && item.EpisodeNumber"><p>Episode:</p> {{item.EpisodeNumber}}</li>
                <li><p>Source:</p> {{item.SourcePath}}</li>
                <li v-bind:title="item.CreateDate"><p>Created:</p> {{timeago(item.CreateDate)}}</li>
            </ul>
        </div>
    </div>
</script>

<script type="text/x-template" id="media-manager-template">
    <div>
        <div id="mediaManager">
            <v-server-table v-bind:name="name" url="@System.IO.Path.Join(Context.Request.PathBase.ToString(), "/external/api/media/manager")" class="panel text-center" :data="data" :columns="columns" :options="options">
                <div slot="createDate" slot-scope="props" v-bind:title="props.row.createDate">
                    {{timeago(props.row.createDate)}}
                </div>
                <div class="btn btn-sm btn-secondary text-center" slot="mediaId" slot-scope="props" v-on:click="edit(props.row)">
                    {{props.row.mediaId}}
                </div>
            </v-server-table>
        </div>
    </div>
</script>