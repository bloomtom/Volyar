@model string

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Conversion Status";
}

@section head {
    <script src="~/external/static/lib/moment.js"></script>
    <script src="~/external/static/js/api.js"></script>
    <script defer src="~/external/static/js/vues.js"></script>
    <script defer src="~/external/static/js/timer.js"></script>
}

<style>
    *,
    *:before,
    *:after {
        box-sizing: border-box;
    }

    h1,
    p {
        margin: 0 0 1em 0;
    }

    .wrapper {
        display: grid;
        grid-gap: 1rem;
        flex-wrap: wrap;
        margin-bottom: 1rem;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        grid-auto-rows: minmax(50px, auto);
    }

    .panel {
        margin: 0.1rem;
        word-break:break-all;
    }

    .btn-cancel {
        float: right;
        margin: -2px;
        padding: 1px 6px 1px 6px;
        font-weight: bold;
    }

    .text-mute-warn {
        color: #6c757d;
    }

        .text-mute-warn:hover {
            color: white;
            background-color: #dc3545;
        }

    .card-body {
        padding: 0.4rem;
    }

    .queue-item-body {
        margin-left: 0.25rem;
        display: flex;
        justify-content: space-between;
    }

    .hidden-details {
        color: transparent;
        line-height: 0;
    }
</style>

<div class="card">
    <div class="card-body">
        <h3 class="card-title dropdown">
            Conversion Status
        </h3>
        <button class="btn btn-primary btn-sm" onclick="postFullscan();">Trigger Conversion</button>
        <button class="btn btn-warning btn-sm" onclick="pauseQueue();">Pause Queue</button>
        <button class="btn btn-success btn-sm" onclick="resumeQueue();">Resume Queue</button>
        <button class="btn btn-danger btn-sm" onclick="cancelAll();">Cancel All</button>
    </div>
</div>


<div class="container-full p-3" id="vuebox">
    <details open>
        <summary class="hidden-details">
            <h5 class="alert alert-primary text-center">Processing {{queueSize(inProgress)}}</h5>
        </summary>
        <progress-queue-component v-bind:items="inProgress"></progress-queue-component>
    </details>
    <details open>
        <summary class="hidden-details">
            <h5 class="alert alert-dark text-center">Waiting {{queueSize(waiting)}}</h5>
        </summary>
        <wait-queue-component v-bind:items="waiting"></wait-queue-component>
    </details>
    <details open>
        <summary class="hidden-details">
            <h5 class="alert alert-success text-center">Complete {{queueSize(complete)}}</h5>
        </summary>
        <complete-queue-component v-bind:items="complete"></complete-queue-component>
    </details>
</div>

<script type="text/x-template" id="queue-template">
    <div class="wrapper">
        <div class="panel" v-for="item in items">
            <div class="card">
                <div class="card-body queue-item-body">
                    <div>
                        <b v-if="item.Series">{{item.Series}}</b>
                        <details>
                            <summary class="card-title">
                                {{title(item)}}
                                <dl style="margin-left:8%;" v-if="item.ErrorText !== null">
                                    <dt class="text-danger">
                                        Error
                                    </dt>
                                    <dd>
                                        {{item.ErrorText}}
                                    </dd>
                                </dl>
                            </summary>
                            <dl style="margin-left:8%;">
                                <dt class="card-text" data-toggle="tooltip" v-bind:title="item.CreateTime">
                                    Added
                                </dt>
                                <dd>
                                    {{timeago(item.CreateTime)}}
                                </dd>

                                <dt>
                                    Qualities
                                </dt>
                                <dd>
                                    <quality-component v-bind:quality="item.Quality"></quality-component>
                                </dd>
                                <dt v-if="tune(item.Tune)">
                                    Tune
                                </dt>
                                <dd>
                                    {{tune(item.Tune)}}
                                </dd>
                            </dl>
                        </details>
                    </div>
                    <div class="" v-bind:title="'Cancel ' + item.SourcePath" v-if="item.Complete !== true">
                        <button class="btn text-mute-warn btn-sm btn-cancel" v-on:click="cancel(item.SourcePath)">X</button>
                    </div>
                </div>
                <div class="card-footer p-0" v-if="item.Complete !== true">
                    <progress-component v-bind:progress="item.Progress"></progress-component>
                </div>
            </div>
        </div>
    </div>
</script>

<script type="text/x-template" id="quality-template">
    <div>
        <div v-for="q in quality">
            {{q.Width}}x{{q.Height}}@@{{ q.Bitrate}}k - {{q.Preset}}
        </div>
    </div>
</script>

<script type="text/x-template" id="progress-template">
    <div>
        <div v-for="p in progress">
            {{shortenDescription(p.Description, 48)}}
            <br />
            <div class="progress" style="height: 1px;">
                <div class="progress-bar" v-bind:style="{ width: progressInt(p.Progress) + '%' }" style="width: 25%" role="progressbar" v-bind:aria-valuenow="progressInt(p.Progress)" aria-valuemin="0" aria-valuemax="100">
                </div>
            </div>
        </div>
    </div>
</script>